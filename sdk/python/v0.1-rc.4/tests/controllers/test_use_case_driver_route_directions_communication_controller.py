# -*- coding: utf-8 -*-

"""
    opentelematicsapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import jsonpickle
import dateutil.parser
from .controller_test_base import ControllerTestBase
from ..test_helper import TestHelper
from opentelematicsapi.api_helper import APIHelper


class UseCaseDriverRouteDirectionsCommunicationControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(UseCaseDriverRouteDirectionsCommunicationControllerTests, cls).setUpClass()
        cls.controller = cls.api_client.use_case_driver_route_directions_communication

    # Clients can retrieve the _geographic details_ of a stop; the *Stop Geographic Details* are the specific location for the
    #truck and trailer to park and a polygon of geographic points indicating the entryway onto a facility (i.e. where the
    #truck should drive on approach).
    #
    #**Access Controls**
    #
    #|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
    #|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
    #|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | ALLOW         | **DENY**   | **DENY**   | ALLOW      |
    def test_get_stop_geographic_details_1(self):
        # Parameters for the API call
        stop_id = 'b4655ce13cb3e137013d852bd7d687ae'

        # Perform the API call through the SDK function
        result = self.controller.get_stop_geographic_details(stop_id)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))

        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        self.assertEqual('{  "id": "C4CA4238A0B923820DCC509A6F75849B",  "providerId": "api.provider.com",  "serverTime": "2019-04-05T02:04:16Z",  "stopName": "pickup place 101",  "address": "13 Sycamore Ave",  "comment": "",  "location": "37.4224764 -122.0842499",  "entryArea": []}', self.response_catcher.response.raw_body)


