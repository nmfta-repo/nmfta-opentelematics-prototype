# -*- coding: utf-8 -*-

"""
    opentelematicsapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import opentelematicsapi.models.region_specific_break_rules
import opentelematicsapi.models.region_specific_waivers

class GetDriverBreaksAndWaiversResponse(object):

    """Implementation of the 'Get Driver Breaks and Waivers response' model.

    TODO: type model description here.

    Attributes:
        break_rules (list of RegionSpecificBreakRules): the Region Specific
            Break Rules for this driver for the requested time period
        waivers (list of RegionSpecificWaivers): the Region Specific Waivers
            for this driver for the requested time period

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "break_rules":'breakRules',
        "waivers":'waivers'
    }

    def __init__(self,
                 break_rules=None,
                 waivers=None):
        """Constructor for the GetDriverBreaksAndWaiversResponse class"""

        # Initialize members of the class
        self.break_rules = break_rules
        self.waivers = waivers


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        break_rules = None
        if dictionary.get('breakRules') != None:
            break_rules = list()
            for structure in dictionary.get('breakRules'):
                break_rules.append(opentelematicsapi.models.region_specific_break_rules.RegionSpecificBreakRules.from_dictionary(structure))
        waivers = None
        if dictionary.get('waivers') != None:
            waivers = list()
            for structure in dictionary.get('waivers'):
                waivers.append(opentelematicsapi.models.region_specific_waivers.RegionSpecificWaivers.from_dictionary(structure))

        # Return an object of this model
        return cls(break_rules,
                   waivers)


