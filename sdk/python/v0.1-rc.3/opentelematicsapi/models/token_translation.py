# -*- coding: utf-8 -*-

"""
    opentelematicsapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class TokenTranslation(object):

    """Implementation of the 'Token Translation' model.

    TODO: type model description here.

    Attributes:
        origin (string): optional note of origin of token to be translated
        comment (string): optional comment for translators
        msgid (string): The token which will be translated
        msgstr (string): The locale's representation (translation) of the
            token

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "msgid":'msgid',
        "msgstr":'msgstr',
        "origin":'origin',
        "comment":'comment'
    }

    def __init__(self,
                 msgid=None,
                 msgstr=None,
                 origin=None,
                 comment=None):
        """Constructor for the TokenTranslation class"""

        # Initialize members of the class
        self.origin = origin
        self.comment = comment
        self.msgid = msgid
        self.msgstr = msgstr


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        msgid = dictionary.get('msgid')
        msgstr = dictionary.get('msgstr')
        origin = dictionary.get('origin')
        comment = dictionary.get('comment')

        # Return an object of this model
        return cls(msgid,
                   msgstr,
                   origin,
                   comment)


