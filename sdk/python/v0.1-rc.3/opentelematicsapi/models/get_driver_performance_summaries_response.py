# -*- coding: utf-8 -*-

"""
    opentelematicsapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import opentelematicsapi.models.driver_performance_summary

class GetDriverPerformanceSummariesResponse(object):

    """Implementation of the 'Get Driver Performance Summaries response' model.

    TODO: type model description here.

    Attributes:
        performance_summaries (list of DriverPerformanceSummary): all the
            Driver Performance Summary objects for this driver for the
            requested time period

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "performance_summaries":'performanceSummaries'
    }

    def __init__(self,
                 performance_summaries=None):
        """Constructor for the GetDriverPerformanceSummariesResponse class"""

        # Initialize members of the class
        self.performance_summaries = performance_summaries


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        performance_summaries = None
        if dictionary.get('performanceSummaries') != None:
            performance_summaries = list()
            for structure in dictionary.get('performanceSummaries'):
                performance_summaries.append(opentelematicsapi.models.driver_performance_summary.DriverPerformanceSummary.from_dictionary(structure))

        # Return an object of this model
        return cls(performance_summaries)


