# -*- coding: utf-8 -*-

"""
    opentelematicsapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import opentelematicsapi.models.vehicle_location_time_history
import opentelematicsapi.models.vehicle_fault_code_event
import opentelematicsapi.models.vehicle_performance_event

class Feed(object):

    """Implementation of the 'feed' model.

    the 'feed' of Fleet Vehicle Info

    Attributes:
        coarse_vehicle_location_time_histories (VehicleLocationTimeHistory):
            TODO: type description here.
        flagged_vehicle_fault_events (list of VehicleFaultCodeEvent): all
            Flagged Vehicle Fault Code Events for all vehicles in the
            requested time period
        vehicle_performance_events (list of VehiclePerformanceEvent): all
            vehicle performance events for all vehicles in the requested time
            period
        vehicle_fault_code_events (list of VehicleFaultCodeEvent): all vehicle
            fault code events for all vehicles in the requested time period

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "coarse_vehicle_location_time_histories":'coarseVehicleLocationTimeHistories',
        "flagged_vehicle_fault_events":'flaggedVehicleFaultEvents',
        "vehicle_performance_events":'vehiclePerformanceEvents',
        "vehicle_fault_code_events":'vehicleFaultCodeEvents'
    }

    def __init__(self,
                 coarse_vehicle_location_time_histories=None,
                 flagged_vehicle_fault_events=None,
                 vehicle_performance_events=None,
                 vehicle_fault_code_events=None):
        """Constructor for the Feed class"""

        # Initialize members of the class
        self.coarse_vehicle_location_time_histories = coarse_vehicle_location_time_histories
        self.flagged_vehicle_fault_events = flagged_vehicle_fault_events
        self.vehicle_performance_events = vehicle_performance_events
        self.vehicle_fault_code_events = vehicle_fault_code_events


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        coarse_vehicle_location_time_histories = opentelematicsapi.models.vehicle_location_time_history.VehicleLocationTimeHistory.from_dictionary(dictionary.get('coarseVehicleLocationTimeHistories')) if dictionary.get('coarseVehicleLocationTimeHistories') else None
        flagged_vehicle_fault_events = None
        if dictionary.get('flaggedVehicleFaultEvents') != None:
            flagged_vehicle_fault_events = list()
            for structure in dictionary.get('flaggedVehicleFaultEvents'):
                flagged_vehicle_fault_events.append(opentelematicsapi.models.vehicle_fault_code_event.VehicleFaultCodeEvent.from_dictionary(structure))
        vehicle_performance_events = None
        if dictionary.get('vehiclePerformanceEvents') != None:
            vehicle_performance_events = list()
            for structure in dictionary.get('vehiclePerformanceEvents'):
                vehicle_performance_events.append(opentelematicsapi.models.vehicle_performance_event.VehiclePerformanceEvent.from_dictionary(structure))
        vehicle_fault_code_events = None
        if dictionary.get('vehicleFaultCodeEvents') != None:
            vehicle_fault_code_events = list()
            for structure in dictionary.get('vehicleFaultCodeEvents'):
                vehicle_fault_code_events.append(opentelematicsapi.models.vehicle_fault_code_event.VehicleFaultCodeEvent.from_dictionary(structure))

        # Return an object of this model
        return cls(coarse_vehicle_location_time_histories,
                   flagged_vehicle_fault_events,
                   vehicle_performance_events,
                   vehicle_fault_code_events)


